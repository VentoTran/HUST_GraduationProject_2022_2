ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.CRC16,"ax",%progbits
  16              		.align	1
  17              		.global	CRC16
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	CRC16:
  25              	.LVL0:
  26              	.LFB70:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "adc.h"
  22:Core/Src/main.c **** #include "i2c.h"
  23:Core/Src/main.c **** #include "rtc.h"
  24:Core/Src/main.c **** #include "spi.h"
  25:Core/Src/main.c **** #include "usart.h"
  26:Core/Src/main.c **** #include "gpio.h"
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** #include "stdio.h"
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 2


  32:Core/Src/main.c **** #include "stdbool.h"
  33:Core/Src/main.c **** #include "stdlib.h"
  34:Core/Src/main.c **** #include "common.h"
  35:Core/Src/main.c **** #include "sx1278.h"
  36:Core/Src/main.c **** #include "string.h"
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END Includes */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** typedef struct SoilData
  44:Core/Src/main.c **** {
  45:Core/Src/main.c ****     uint16_t rawTemperature;
  46:Core/Src/main.c ****     uint16_t rawHumidity;
  47:Core/Src/main.c ****     float Temperature;
  48:Core/Src/main.c ****     float Humidity;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c ****     uint16_t Salinity;
  51:Core/Src/main.c ****     uint16_t Conductivity;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c ****     uint16_t rawPH;
  54:Core/Src/main.c ****     float pH;
  55:Core/Src/main.c **** 
  56:Core/Src/main.c ****     uint16_t N;
  57:Core/Src/main.c ****     uint16_t P;
  58:Core/Src/main.c ****     uint16_t K;
  59:Core/Src/main.c **** } SoilData_t;
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END PTD */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  64:Core/Src/main.c **** /* USER CODE BEGIN PD */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** #define SLEEPTIME_MIN (1U)
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* USER CODE END PD */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  71:Core/Src/main.c **** /* USER CODE BEGIN PM */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /* USER CODE END PM */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /* USER CODE BEGIN PV */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /* USER CODE END PV */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  82:Core/Src/main.c **** void SystemClock_Config(void);
  83:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** bool readSensor(void);
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** uint16_t CRC16(unsigned char *buf, int len);
  88:Core/Src/main.c **** 
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 3


  89:Core/Src/main.c **** void goingDark(void);
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** /* USER CODE END PFP */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  94:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c **** static SoilData_t mySoil;
  97:Core/Src/main.c **** 
  98:Core/Src/main.c **** /* USER CODE END 0 */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c **** /**
 101:Core/Src/main.c ****   * @brief  The application entry point.
 102:Core/Src/main.c ****   * @retval int
 103:Core/Src/main.c ****   */
 104:Core/Src/main.c **** int main(void)
 105:Core/Src/main.c **** {
 106:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE END 1 */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 113:Core/Src/main.c ****   HAL_Init();
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 116:Core/Src/main.c ****   /* USER CODE END Init */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* Configure the system clock */
 119:Core/Src/main.c ****   SystemClock_Config();
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 122:Core/Src/main.c **** #ifdef USE_USB
 123:Core/Src/main.c **** #if DEBUG == 1
 124:Core/Src/main.c ****     GPIO_USB_INIT();
 125:Core/Src/main.c ****     MX_USB_DEVICE_Init();
 126:Core/Src/main.c **** #endif /* DEBUG == 1 */
 127:Core/Src/main.c **** #endif /* USE_USB */
 128:Core/Src/main.c ****   /* USER CODE END SysInit */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /* Initialize all configured peripherals */
 131:Core/Src/main.c ****   MX_GPIO_Init();
 132:Core/Src/main.c ****   MX_ADC1_Init();
 133:Core/Src/main.c ****   MX_I2C1_Init();
 134:Core/Src/main.c ****   MX_SPI1_Init();
 135:Core/Src/main.c ****   MX_USART1_UART_Init();
 136:Core/Src/main.c ****   MX_RTC_Init();
 137:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****     /* check FLAGs */
 140:Core/Src/main.c ****     // if (__HAL_PWR_GET_FLAG(PWR_FLAG_SB) == RESET)
 141:Core/Src/main.c ****     // {
 142:Core/Src/main.c ****     // }
 143:Core/Src/main.c ****     HAL_ADC_Start(&hadc1);
 144:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc1, 200);
 145:Core/Src/main.c **** 
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 4


 146:Core/Src/main.c ****     uint32_t backupStorage = HAL_RTCEx_BKUPRead(&hrtc, RTC_BKP_DR1);
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****     sx1278_init();
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****     static uint8_t msg[50] = {0};
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****     for (int i = 0; i < 1; i++)
 153:Core/Src/main.c ****     {
 154:Core/Src/main.c ****         sprintf((char *)msg, "Hello from Node! This is a random number %d!", (int)(HAL_ADC_GetValue
 155:Core/Src/main.c ****         sx1278_send_data(msg, strlen((const char *)msg));
 156:Core/Src/main.c ****         HAL_Delay(2000);
 157:Core/Src/main.c ****     }
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****     HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR1, backupStorage+1);
 160:Core/Src/main.c ****     HAL_ADC_Stop(&hadc1);
 161:Core/Src/main.c ****     HAL_ADC_DeInit(&hadc1);
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****     sx1278_sleep();
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED1_GPIO_Port, LED1_Pin);
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****     HAL_GPIO_WritePin(PWR_CTRL_GPIO_Port, PWR_CTRL_Pin, GPIO_PIN_SET);
 168:Core/Src/main.c ****     HAL_Delay(3000);
 169:Core/Src/main.c ****     readSensor();
 170:Core/Src/main.c ****     HAL_GPIO_WritePin(PWR_CTRL_GPIO_Port, PWR_CTRL_Pin, GPIO_PIN_RESET);
 171:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED0_GPIO_Port, LED0_Pin);
 172:Core/Src/main.c ****     HAL_Delay(1000);
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****     // uint32_t timeKeeper = HAL_GetTick();
 175:Core/Src/main.c **** 
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** #if DEBUG == 1
 178:Core/Src/main.c ****     logPC("This is the end of setup, now entering while loop!");
 179:Core/Src/main.c **** #endif /* DEBUG == 1 */
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED1_GPIO_Port, LED1_Pin);
 182:Core/Src/main.c ****     HAL_Delay(500);
 183:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED0_GPIO_Port, LED0_Pin);
 184:Core/Src/main.c ****     HAL_Delay(500);
 185:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED1_GPIO_Port, LED1_Pin);
 186:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED0_GPIO_Port, LED0_Pin);
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****     goingDark();
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   /* USER CODE END 2 */
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /* Infinite loop */
 193:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 194:Core/Src/main.c ****     while (1)
 195:Core/Src/main.c ****     {
 196:Core/Src/main.c ****     /* USER CODE END WHILE */
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****     }
 201:Core/Src/main.c ****   /* USER CODE END 3 */
 202:Core/Src/main.c **** }
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 5


 203:Core/Src/main.c **** 
 204:Core/Src/main.c **** /**
 205:Core/Src/main.c ****   * @brief System Clock Configuration
 206:Core/Src/main.c ****   * @retval None
 207:Core/Src/main.c ****   */
 208:Core/Src/main.c **** void SystemClock_Config(void)
 209:Core/Src/main.c **** {
 210:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 211:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 212:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 215:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 216:Core/Src/main.c ****   */
 217:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_LSE;
 218:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 219:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 220:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 221:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 222:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 223:Core/Src/main.c ****   {
 224:Core/Src/main.c ****     Error_Handler();
 225:Core/Src/main.c ****   }
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 228:Core/Src/main.c ****   */
 229:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 230:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 231:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 232:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 233:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 234:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 237:Core/Src/main.c ****   {
 238:Core/Src/main.c ****     Error_Handler();
 239:Core/Src/main.c ****   }
 240:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_RTC|RCC_PERIPHCLK_ADC;
 241:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 242:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 243:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 244:Core/Src/main.c ****   {
 245:Core/Src/main.c ****     Error_Handler();
 246:Core/Src/main.c ****   }
 247:Core/Src/main.c **** }
 248:Core/Src/main.c **** 
 249:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 250:Core/Src/main.c **** 
 251:Core/Src/main.c **** uint16_t CRC16(unsigned char *buf, int len)
 252:Core/Src/main.c **** {
  28              		.loc 1 252 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 252 1 is_stmt 0 view .LVU1
  33 0000 00B5     		push	{lr}
  34              	.LCFI0:
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 6


  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 14, -4
  37 0002 8646     		mov	lr, r0
 253:Core/Src/main.c ****     uint16_t crc = 0xFFFF;
  38              		.loc 1 253 5 is_stmt 1 view .LVU2
  39              	.LVL1:
 254:Core/Src/main.c ****     for (int pos = 0; pos < len; pos++)
  40              		.loc 1 254 5 view .LVU3
  41              	.LBB6:
  42              		.loc 1 254 10 view .LVU4
  43              		.loc 1 254 14 is_stmt 0 view .LVU5
  44 0004 4FF0000C 		mov	ip, #0
  45              	.LBE6:
 253:Core/Src/main.c ****     uint16_t crc = 0xFFFF;
  46              		.loc 1 253 14 view .LVU6
  47 0008 4FF6FF70 		movw	r0, #65535
  48              	.LVL2:
  49              	.LBB9:
  50              		.loc 1 254 5 view .LVU7
  51 000c 0CE0     		b	.L2
  52              	.LVL3:
  53              	.L4:
  54              	.LBB7:
 255:Core/Src/main.c ****     {
 256:Core/Src/main.c ****         // XOR byte into least sig. byte of crc
 257:Core/Src/main.c ****         crc ^= (unsigned int)buf[pos];
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****         for (int i = 8; i != 0; i--)
 260:Core/Src/main.c ****         {
 261:Core/Src/main.c ****             // Loop over each bit
 262:Core/Src/main.c ****             if ((crc & 0x0001) != 0)
 263:Core/Src/main.c ****             {
 264:Core/Src/main.c ****                 // If the LSB is set => Shift right and XOR 0xA001
 265:Core/Src/main.c ****                 crc >>= 1;
 266:Core/Src/main.c ****                 crc ^= 0xA001;
 267:Core/Src/main.c ****             }
 268:Core/Src/main.c ****             else
 269:Core/Src/main.c ****             {
 270:Core/Src/main.c ****                 // Else LSB is not set => Just shift right
 271:Core/Src/main.c ****                 crc >>= 1;
  55              		.loc 1 271 17 is_stmt 1 view .LVU8
  56              		.loc 1 271 21 is_stmt 0 view .LVU9
  57 000e 4008     		lsrs	r0, r0, #1
  58              	.LVL4:
  59              	.L5:
 259:Core/Src/main.c ****         {
  60              		.loc 1 259 33 is_stmt 1 discriminator 2 view .LVU10
 259:Core/Src/main.c ****         {
  61              		.loc 1 259 34 is_stmt 0 discriminator 2 view .LVU11
  62 0010 013B     		subs	r3, r3, #1
  63              	.LVL5:
  64              	.L3:
 259:Core/Src/main.c ****         {
  65              		.loc 1 259 25 is_stmt 1 discriminator 1 view .LVU12
 259:Core/Src/main.c ****         {
  66              		.loc 1 259 9 is_stmt 0 discriminator 1 view .LVU13
  67 0012 3BB1     		cbz	r3, .L9
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 7


 262:Core/Src/main.c ****             {
  68              		.loc 1 262 13 is_stmt 1 view .LVU14
 262:Core/Src/main.c ****             {
  69              		.loc 1 262 16 is_stmt 0 view .LVU15
  70 0014 10F0010F 		tst	r0, #1
  71 0018 F9D0     		beq	.L4
 265:Core/Src/main.c ****                 crc ^= 0xA001;
  72              		.loc 1 265 17 is_stmt 1 view .LVU16
  73              	.LVL6:
 266:Core/Src/main.c ****             }
  74              		.loc 1 266 17 view .LVU17
 266:Core/Src/main.c ****             }
  75              		.loc 1 266 21 is_stmt 0 view .LVU18
  76 001a 4AF20102 		movw	r2, #40961
  77 001e 82EA5000 		eor	r0, r2, r0, lsr #1
  78              	.LVL7:
 266:Core/Src/main.c ****             }
  79              		.loc 1 266 21 view .LVU19
  80 0022 F5E7     		b	.L5
  81              	.L9:
 266:Core/Src/main.c ****             }
  82              		.loc 1 266 21 view .LVU20
  83              	.LBE7:
 254:Core/Src/main.c ****     {
  84              		.loc 1 254 34 is_stmt 1 discriminator 2 view .LVU21
 254:Core/Src/main.c ****     {
  85              		.loc 1 254 37 is_stmt 0 discriminator 2 view .LVU22
  86 0024 0CF1010C 		add	ip, ip, #1
  87              	.LVL8:
  88              	.L2:
 254:Core/Src/main.c ****     {
  89              		.loc 1 254 23 is_stmt 1 discriminator 1 view .LVU23
 254:Core/Src/main.c ****     {
  90              		.loc 1 254 5 is_stmt 0 discriminator 1 view .LVU24
  91 0028 8C45     		cmp	ip, r1
  92 002a 04DA     		bge	.L10
 257:Core/Src/main.c **** 
  93              		.loc 1 257 9 is_stmt 1 view .LVU25
 257:Core/Src/main.c **** 
  94              		.loc 1 257 33 is_stmt 0 view .LVU26
  95 002c 1EF80C30 		ldrb	r3, [lr, ip]	@ zero_extendqisi2
 257:Core/Src/main.c **** 
  96              		.loc 1 257 13 view .LVU27
  97 0030 5840     		eors	r0, r0, r3
  98              	.LVL9:
 259:Core/Src/main.c ****         {
  99              		.loc 1 259 9 is_stmt 1 view .LVU28
 100              	.LBB8:
 259:Core/Src/main.c ****         {
 101              		.loc 1 259 14 view .LVU29
 259:Core/Src/main.c ****         {
 102              		.loc 1 259 18 is_stmt 0 view .LVU30
 103 0032 0823     		movs	r3, #8
 259:Core/Src/main.c ****         {
 104              		.loc 1 259 9 view .LVU31
 105 0034 EDE7     		b	.L3
 106              	.LVL10:
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 8


 107              	.L10:
 259:Core/Src/main.c ****         {
 108              		.loc 1 259 9 view .LVU32
 109              	.LBE8:
 110              	.LBE9:
 272:Core/Src/main.c ****             }
 273:Core/Src/main.c ****         }
 274:Core/Src/main.c ****     }
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****     return crc;
 111              		.loc 1 276 5 is_stmt 1 view .LVU33
 277:Core/Src/main.c **** }
 112              		.loc 1 277 1 is_stmt 0 view .LVU34
 113 0036 5DF804FB 		ldr	pc, [sp], #4
 114              		.cfi_endproc
 115              	.LFE70:
 117              		.global	__aeabi_ui2f
 118              		.global	__aeabi_fdiv
 119              		.section	.text.readSensor,"ax",%progbits
 120              		.align	1
 121              		.global	readSensor
 122              		.syntax unified
 123              		.thumb
 124              		.thumb_func
 125              		.fpu softvfp
 127              	readSensor:
 128              	.LFB71:
 278:Core/Src/main.c **** 
 279:Core/Src/main.c **** bool readSensor(void)
 280:Core/Src/main.c **** {
 129              		.loc 1 280 1 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133 0000 70B5     		push	{r4, r5, r6, lr}
 134              	.LCFI1:
 135              		.cfi_def_cfa_offset 16
 136              		.cfi_offset 4, -16
 137              		.cfi_offset 5, -12
 138              		.cfi_offset 6, -8
 139              		.cfi_offset 14, -4
 281:Core/Src/main.c ****     static uint8_t txbuffer[10] = {0x01, 0x03, 0x00, 0x00, 0x00, 0x08, 0x44, 0x0C};
 140              		.loc 1 281 5 view .LVU36
 282:Core/Src/main.c ****     static uint8_t rxbuffer[25];
 141              		.loc 1 282 5 view .LVU37
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****     HAL_GPIO_WritePin(DE_GPIO_Port, DE_Pin, GPIO_PIN_SET);
 142              		.loc 1 284 5 view .LVU38
 143 0002 414E     		ldr	r6, .L16
 144 0004 0122     		movs	r2, #1
 145 0006 4FF48071 		mov	r1, #256
 146 000a 3046     		mov	r0, r6
 147 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 148              	.LVL11:
 285:Core/Src/main.c ****     HAL_GPIO_WritePin(RE_GPIO_Port, RE_Pin, GPIO_PIN_SET);
 149              		.loc 1 285 5 view .LVU39
 150 0010 3E4C     		ldr	r4, .L16+4
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 9


 151 0012 0122     		movs	r2, #1
 152 0014 4FF40041 		mov	r1, #32768
 153 0018 2046     		mov	r0, r4
 154 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 155              	.LVL12:
 286:Core/Src/main.c **** 
 287:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, txbuffer, 8, 10);
 156              		.loc 1 287 5 view .LVU40
 157 001e 3C4D     		ldr	r5, .L16+8
 158 0020 0A23     		movs	r3, #10
 159 0022 0822     		movs	r2, #8
 160 0024 3B49     		ldr	r1, .L16+12
 161 0026 2846     		mov	r0, r5
 162 0028 FFF7FEFF 		bl	HAL_UART_Transmit
 163              	.LVL13:
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****     HAL_GPIO_WritePin(DE_GPIO_Port, DE_Pin, GPIO_PIN_RESET);
 164              		.loc 1 289 5 view .LVU41
 165 002c 0022     		movs	r2, #0
 166 002e 4FF48071 		mov	r1, #256
 167 0032 3046     		mov	r0, r6
 168 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
 169              	.LVL14:
 290:Core/Src/main.c ****     HAL_GPIO_WritePin(RE_GPIO_Port, RE_Pin, GPIO_PIN_RESET);
 170              		.loc 1 290 5 view .LVU42
 171 0038 0022     		movs	r2, #0
 172 003a 4FF40041 		mov	r1, #32768
 173 003e 2046     		mov	r0, r4
 174 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 175              	.LVL15:
 291:Core/Src/main.c ****     HAL_UART_Receive(&huart1, rxbuffer, 21, 200);
 176              		.loc 1 291 5 view .LVU43
 177 0044 344C     		ldr	r4, .L16+16
 178 0046 C823     		movs	r3, #200
 179 0048 1522     		movs	r2, #21
 180 004a 2146     		mov	r1, r4
 181 004c 2846     		mov	r0, r5
 182 004e FFF7FEFF 		bl	HAL_UART_Receive
 183              	.LVL16:
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****     // memcpy(&mySoil[i].rawTemperature, &rxbuffer[3], 2U);
 294:Core/Src/main.c ****     mySoil.rawTemperature = (uint16_t)((rxbuffer[3] << 8U) | (uint16_t)rxbuffer[4]);
 184              		.loc 1 294 5 view .LVU44
 185              		.loc 1 294 49 is_stmt 0 view .LVU45
 186 0052 E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 187              		.loc 1 294 80 view .LVU46
 188 0054 2079     		ldrb	r0, [r4, #4]	@ zero_extendqisi2
 189              		.loc 1 294 29 view .LVU47
 190 0056 40EA0320 		orr	r0, r0, r3, lsl #8
 191              		.loc 1 294 27 view .LVU48
 192 005a 304D     		ldr	r5, .L16+20
 193 005c 2880     		strh	r0, [r5]	@ movhi
 295:Core/Src/main.c ****     mySoil.Temperature = (float)((float)mySoil.rawTemperature / 10.0);
 194              		.loc 1 295 5 is_stmt 1 view .LVU49
 195              		.loc 1 295 34 is_stmt 0 view .LVU50
 196 005e FFF7FEFF 		bl	__aeabi_ui2f
 197              	.LVL17:
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 10


 198              		.loc 1 295 26 view .LVU51
 199 0062 2F49     		ldr	r1, .L16+24
 200 0064 FFF7FEFF 		bl	__aeabi_fdiv
 201              	.LVL18:
 202              		.loc 1 295 24 view .LVU52
 203 0068 6860     		str	r0, [r5, #4]	@ float
 296:Core/Src/main.c ****     mySoil.rawHumidity = (uint16_t)((rxbuffer[5] << 8U) | (uint16_t)rxbuffer[6]);
 204              		.loc 1 296 5 is_stmt 1 view .LVU53
 205              		.loc 1 296 46 is_stmt 0 view .LVU54
 206 006a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 207              		.loc 1 296 77 view .LVU55
 208 006c A079     		ldrb	r0, [r4, #6]	@ zero_extendqisi2
 209              		.loc 1 296 26 view .LVU56
 210 006e 40EA0320 		orr	r0, r0, r3, lsl #8
 211              		.loc 1 296 24 view .LVU57
 212 0072 6880     		strh	r0, [r5, #2]	@ movhi
 297:Core/Src/main.c ****     mySoil.Humidity = (float)((float)mySoil.rawHumidity / 10.0);
 213              		.loc 1 297 5 is_stmt 1 view .LVU58
 214              		.loc 1 297 31 is_stmt 0 view .LVU59
 215 0074 FFF7FEFF 		bl	__aeabi_ui2f
 216              	.LVL19:
 217              		.loc 1 297 23 view .LVU60
 218 0078 2949     		ldr	r1, .L16+24
 219 007a FFF7FEFF 		bl	__aeabi_fdiv
 220              	.LVL20:
 221              		.loc 1 297 21 view .LVU61
 222 007e A860     		str	r0, [r5, #8]	@ float
 298:Core/Src/main.c ****     mySoil.Salinity = (uint16_t)((rxbuffer[7] << 8U) | (uint16_t)rxbuffer[8]);
 223              		.loc 1 298 5 is_stmt 1 view .LVU62
 224              		.loc 1 298 43 is_stmt 0 view .LVU63
 225 0080 E279     		ldrb	r2, [r4, #7]	@ zero_extendqisi2
 226              		.loc 1 298 74 view .LVU64
 227 0082 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 228              		.loc 1 298 23 view .LVU65
 229 0084 43EA0223 		orr	r3, r3, r2, lsl #8
 230              		.loc 1 298 21 view .LVU66
 231 0088 AB81     		strh	r3, [r5, #12]	@ movhi
 299:Core/Src/main.c ****     mySoil.Conductivity = (uint16_t)((rxbuffer[9] << 8U) | (uint16_t)rxbuffer[10]);
 232              		.loc 1 299 5 is_stmt 1 view .LVU67
 233              		.loc 1 299 47 is_stmt 0 view .LVU68
 234 008a 627A     		ldrb	r2, [r4, #9]	@ zero_extendqisi2
 235              		.loc 1 299 78 view .LVU69
 236 008c A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 237              		.loc 1 299 27 view .LVU70
 238 008e 43EA0223 		orr	r3, r3, r2, lsl #8
 239              		.loc 1 299 25 view .LVU71
 240 0092 EB81     		strh	r3, [r5, #14]	@ movhi
 300:Core/Src/main.c ****     mySoil.rawPH = (uint16_t)((rxbuffer[11] << 8U) | (uint16_t)rxbuffer[12]);
 241              		.loc 1 300 5 is_stmt 1 view .LVU72
 242              		.loc 1 300 40 is_stmt 0 view .LVU73
 243 0094 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 244              		.loc 1 300 72 view .LVU74
 245 0096 207B     		ldrb	r0, [r4, #12]	@ zero_extendqisi2
 246              		.loc 1 300 20 view .LVU75
 247 0098 40EA0320 		orr	r0, r0, r3, lsl #8
 248              		.loc 1 300 18 view .LVU76
 249 009c 2882     		strh	r0, [r5, #16]	@ movhi
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 11


 301:Core/Src/main.c ****     mySoil.pH = (float)((float)mySoil.rawPH / 100.0);
 250              		.loc 1 301 5 is_stmt 1 view .LVU77
 251              		.loc 1 301 25 is_stmt 0 view .LVU78
 252 009e FFF7FEFF 		bl	__aeabi_ui2f
 253              	.LVL21:
 254              		.loc 1 301 17 view .LVU79
 255 00a2 2049     		ldr	r1, .L16+28
 256 00a4 FFF7FEFF 		bl	__aeabi_fdiv
 257              	.LVL22:
 258              		.loc 1 301 15 view .LVU80
 259 00a8 6861     		str	r0, [r5, #20]	@ float
 302:Core/Src/main.c ****     mySoil.N = (uint16_t)((rxbuffer[13] << 8U) | (uint16_t)rxbuffer[14]);
 260              		.loc 1 302 5 is_stmt 1 view .LVU81
 261              		.loc 1 302 36 is_stmt 0 view .LVU82
 262 00aa 627B     		ldrb	r2, [r4, #13]	@ zero_extendqisi2
 263              		.loc 1 302 68 view .LVU83
 264 00ac A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 265              		.loc 1 302 16 view .LVU84
 266 00ae 43EA0223 		orr	r3, r3, r2, lsl #8
 267              		.loc 1 302 14 view .LVU85
 268 00b2 2B83     		strh	r3, [r5, #24]	@ movhi
 303:Core/Src/main.c ****     mySoil.P = (uint16_t)((rxbuffer[15] << 8U) | (uint16_t)rxbuffer[16]);
 269              		.loc 1 303 5 is_stmt 1 view .LVU86
 270              		.loc 1 303 36 is_stmt 0 view .LVU87
 271 00b4 E27B     		ldrb	r2, [r4, #15]	@ zero_extendqisi2
 272              		.loc 1 303 68 view .LVU88
 273 00b6 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 274              		.loc 1 303 16 view .LVU89
 275 00b8 43EA0223 		orr	r3, r3, r2, lsl #8
 276              		.loc 1 303 14 view .LVU90
 277 00bc 6B83     		strh	r3, [r5, #26]	@ movhi
 304:Core/Src/main.c ****     mySoil.K = (uint16_t)((rxbuffer[17] << 8U) | (uint16_t)rxbuffer[18]);
 278              		.loc 1 304 5 is_stmt 1 view .LVU91
 279              		.loc 1 304 36 is_stmt 0 view .LVU92
 280 00be 627C     		ldrb	r2, [r4, #17]	@ zero_extendqisi2
 281              		.loc 1 304 68 view .LVU93
 282 00c0 A37C     		ldrb	r3, [r4, #18]	@ zero_extendqisi2
 283              		.loc 1 304 16 view .LVU94
 284 00c2 43EA0223 		orr	r3, r3, r2, lsl #8
 285              		.loc 1 304 14 view .LVU95
 286 00c6 AB83     		strh	r3, [r5, #28]	@ movhi
 305:Core/Src/main.c **** 
 306:Core/Src/main.c ****     uint16_t calculatedCRC = CRC16(rxbuffer, 19);
 287              		.loc 1 306 5 is_stmt 1 view .LVU96
 288              		.loc 1 306 30 is_stmt 0 view .LVU97
 289 00c8 1321     		movs	r1, #19
 290 00ca 2046     		mov	r0, r4
 291 00cc FFF7FEFF 		bl	CRC16
 292              	.LVL23:
 307:Core/Src/main.c **** 
 308:Core/Src/main.c ****     if (((uint8_t)(calculatedCRC & 0x00FF) != (uint8_t)rxbuffer[19]) ||
 293              		.loc 1 308 5 is_stmt 1 view .LVU98
 294              		.loc 1 308 10 is_stmt 0 view .LVU99
 295 00d0 C2B2     		uxtb	r2, r0
 296              		.loc 1 308 64 view .LVU100
 297 00d2 E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 298              		.loc 1 308 8 view .LVU101
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 12


 299 00d4 9A42     		cmp	r2, r3
 300 00d6 04D1     		bne	.L12
 309:Core/Src/main.c ****         ((uint8_t)((uint16_t)(calculatedCRC & 0xFF00) >> 8) != (uint8_t)rxbuffer[20]))
 301              		.loc 1 309 10 discriminator 1 view .LVU102
 302 00d8 C0F30720 		ubfx	r0, r0, #8, #8
 303              	.LVL24:
 304              		.loc 1 309 81 discriminator 1 view .LVU103
 305 00dc 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 308:Core/Src/main.c ****         ((uint8_t)((uint16_t)(calculatedCRC & 0xFF00) >> 8) != (uint8_t)rxbuffer[20]))
 306              		.loc 1 308 70 discriminator 1 view .LVU104
 307 00de 9842     		cmp	r0, r3
 308 00e0 06D0     		beq	.L13
 309              	.L12:
 310:Core/Src/main.c ****     {
 311:Core/Src/main.c ****         memset(&mySoil, '\0', sizeof(mySoil));
 310              		.loc 1 311 9 is_stmt 1 view .LVU105
 311 00e2 2022     		movs	r2, #32
 312 00e4 0021     		movs	r1, #0
 313 00e6 0D48     		ldr	r0, .L16+20
 314 00e8 FFF7FEFF 		bl	memset
 315              	.LVL25:
 312:Core/Src/main.c **** #if DEBUG == 1
 313:Core/Src/main.c ****         logPC("Checksum Failed! Calculated: 0x%04X\tReceived: 0x%02X%02X\r\n", calculatedCRC, rxbuf
 314:Core/Src/main.c **** #endif /* DEBUG == 1 */
 315:Core/Src/main.c ****         return false;
 316              		.loc 1 315 9 view .LVU106
 317              		.loc 1 315 16 is_stmt 0 view .LVU107
 318 00ec 0020     		movs	r0, #0
 319              	.L14:
 316:Core/Src/main.c ****     }
 317:Core/Src/main.c **** 
 318:Core/Src/main.c ****     // HAL_Delay(500);
 319:Core/Src/main.c **** #if DEBUG == 1
 320:Core/Src/main.c ****     logPC("Checksum Passed! Calculated: 0x%04X\tReceived: 0x%02X%02X\r\n", calculatedCRC, rxbuffer[
 321:Core/Src/main.c ****     rxbuffer[21] = '\r';
 322:Core/Src/main.c ****     rxbuffer[22] = '\n';
 323:Core/Src/main.c ****     logPC("Raw Data Read:\n");
 324:Core/Src/main.c ****     for (int j = 0; j < 21; j++)
 325:Core/Src/main.c ****         logPC("0x%02X ", rxbuffer[j]);
 326:Core/Src/main.c ****     logPC("%c%c", rxbuffer[21], rxbuffer[22]);
 327:Core/Src/main.c ****     logPC("Temp: %02.1f °C\nHumd: %02.1f %%RH\n", mySoil.Temperature, mySoil.Humidity);
 328:Core/Src/main.c ****     logPC("Salinity: %4d uS/cm\nConducticity: %4d uS/cm\n", mySoil.Salinity, mySoil.Conductivity);
 329:Core/Src/main.c ****     logPC("pH: %1.2f\nN: %4d mg/kg\nP: %4d mg/kg\nK: %4d mg/kg\n\n", mySoil.pH, mySoil.N, mySoil.P,
 330:Core/Src/main.c **** #endif /* DEBUG == 1 */
 331:Core/Src/main.c ****     memset(rxbuffer, '\0', sizeof(rxbuffer));
 332:Core/Src/main.c ****     // HAL_Delay(100);
 333:Core/Src/main.c ****     return true;
 334:Core/Src/main.c **** }
 320              		.loc 1 334 1 view .LVU108
 321 00ee 70BD     		pop	{r4, r5, r6, pc}
 322              	.L13:
 331:Core/Src/main.c ****     // HAL_Delay(100);
 323              		.loc 1 331 5 is_stmt 1 view .LVU109
 324 00f0 094B     		ldr	r3, .L16+16
 325 00f2 0022     		movs	r2, #0
 326 00f4 1A60     		str	r2, [r3]
 327 00f6 5A60     		str	r2, [r3, #4]
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 13


 328 00f8 9A60     		str	r2, [r3, #8]
 329 00fa DA60     		str	r2, [r3, #12]
 330 00fc 1A61     		str	r2, [r3, #16]
 331 00fe 5A61     		str	r2, [r3, #20]
 332 0100 1A76     		strb	r2, [r3, #24]
 333:Core/Src/main.c **** }
 333              		.loc 1 333 5 view .LVU110
 333:Core/Src/main.c **** }
 334              		.loc 1 333 12 is_stmt 0 view .LVU111
 335 0102 0120     		movs	r0, #1
 336 0104 F3E7     		b	.L14
 337              	.L17:
 338 0106 00BF     		.align	2
 339              	.L16:
 340 0108 00080140 		.word	1073809408
 341 010c 000C0140 		.word	1073810432
 342 0110 00000000 		.word	huart1
 343 0114 00000000 		.word	.LANCHOR0
 344 0118 00000000 		.word	.LANCHOR1
 345 011c 00000000 		.word	.LANCHOR2
 346 0120 00002041 		.word	1092616192
 347 0124 0000C842 		.word	1120403456
 348              		.cfi_endproc
 349              	.LFE71:
 351              		.section	.text.goingDark,"ax",%progbits
 352              		.align	1
 353              		.global	goingDark
 354              		.syntax unified
 355              		.thumb
 356              		.thumb_func
 357              		.fpu softvfp
 359              	goingDark:
 360              	.LFB72:
 335:Core/Src/main.c **** 
 336:Core/Src/main.c **** void goingDark(void)
 337:Core/Src/main.c **** {
 361              		.loc 1 337 1 is_stmt 1 view -0
 362              		.cfi_startproc
 363              		@ Volatile: function does not return.
 364              		@ args = 0, pretend = 0, frame = 16
 365              		@ frame_needed = 0, uses_anonymous_args = 0
 366 0000 00B5     		push	{lr}
 367              	.LCFI2:
 368              		.cfi_def_cfa_offset 4
 369              		.cfi_offset 14, -4
 370 0002 85B0     		sub	sp, sp, #20
 371              	.LCFI3:
 372              		.cfi_def_cfa_offset 24
 338:Core/Src/main.c ****     /* Enable WUPIN PA0 */
 339:Core/Src/main.c ****     SET_BIT(PWR->CSR, PWR_CSR_EWUP);
 373              		.loc 1 339 5 view .LVU113
 374 0004 1D4C     		ldr	r4, .L21
 375 0006 6368     		ldr	r3, [r4, #4]
 376 0008 43F48073 		orr	r3, r3, #256
 377 000c 6360     		str	r3, [r4, #4]
 340:Core/Src/main.c **** 
 341:Core/Src/main.c ****     /* Set RTC Alarm for 300s */
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 14


 342:Core/Src/main.c ****     RTC_TimeTypeDef timeNow;
 378              		.loc 1 342 5 view .LVU114
 343:Core/Src/main.c ****     RTC_AlarmTypeDef timeAlarm;
 379              		.loc 1 343 5 view .LVU115
 344:Core/Src/main.c ****     HAL_RTC_GetTime(&hrtc, &timeNow, RTC_FORMAT_BCD);
 380              		.loc 1 344 5 view .LVU116
 381 000e 1C4E     		ldr	r6, .L21+4
 382 0010 0122     		movs	r2, #1
 383 0012 03A9     		add	r1, sp, #12
 384 0014 3046     		mov	r0, r6
 385 0016 FFF7FEFF 		bl	HAL_RTC_GetTime
 386              	.LVL26:
 345:Core/Src/main.c ****     timeAlarm.Alarm = RTC_ALARM_A;
 387              		.loc 1 345 5 view .LVU117
 388              		.loc 1 345 21 is_stmt 0 view .LVU118
 389 001a 0025     		movs	r5, #0
 390 001c 0295     		str	r5, [sp, #8]
 346:Core/Src/main.c ****     timeAlarm.AlarmTime = timeNow;
 391              		.loc 1 346 5 is_stmt 1 view .LVU119
 392              		.loc 1 346 25 is_stmt 0 view .LVU120
 393 001e 039B     		ldr	r3, [sp, #12]
 394 0020 ADF80430 		strh	r3, [sp, #4]	@ movhi
 395 0024 1B0C     		lsrs	r3, r3, #16
 396 0026 8DF80630 		strb	r3, [sp, #6]
 347:Core/Src/main.c ****     timeAlarm.AlarmTime.Minutes += SLEEPTIME_MIN;
 397              		.loc 1 347 5 is_stmt 1 view .LVU121
 398              		.loc 1 347 33 is_stmt 0 view .LVU122
 399 002a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 400 002e 0133     		adds	r3, r3, #1
 401 0030 8DF80530 		strb	r3, [sp, #5]
 348:Core/Src/main.c ****     __HAL_RTC_ALARM_CLEAR_FLAG(&hrtc, RTC_FLAG_ALRAF);
 402              		.loc 1 348 5 is_stmt 1 view .LVU123
 403 0034 3268     		ldr	r2, [r6]
 404 0036 5368     		ldr	r3, [r2, #4]
 405 0038 23F00203 		bic	r3, r3, #2
 406 003c 5360     		str	r3, [r2, #4]
 349:Core/Src/main.c ****     HAL_RTC_SetAlarm_IT(&hrtc, &timeAlarm, RTC_FORMAT_BCD);
 407              		.loc 1 349 5 view .LVU124
 408 003e 0122     		movs	r2, #1
 409 0040 01A9     		add	r1, sp, #4
 410 0042 3046     		mov	r0, r6
 411 0044 FFF7FEFF 		bl	HAL_RTC_SetAlarm_IT
 412              	.LVL27:
 350:Core/Src/main.c **** 
 351:Core/Src/main.c ****     /* Set SLEEPDEEP bit of Cortex System Control Register */
 352:Core/Src/main.c ****     SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 413              		.loc 1 352 5 view .LVU125
 414 0048 0E4A     		ldr	r2, .L21+8
 415 004a 1369     		ldr	r3, [r2, #16]
 416 004c 43F00403 		orr	r3, r3, #4
 417 0050 1361     		str	r3, [r2, #16]
 353:Core/Src/main.c **** 
 354:Core/Src/main.c ****     /* Select Standby mode */
 355:Core/Src/main.c ****     SET_BIT(PWR->CR, PWR_CR_PDDS);
 418              		.loc 1 355 5 view .LVU126
 419 0052 2368     		ldr	r3, [r4]
 420 0054 43F00203 		orr	r3, r3, #2
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 15


 421 0058 2360     		str	r3, [r4]
 356:Core/Src/main.c **** 
 357:Core/Src/main.c ****     /* Clear WUF bit in Power Control/Status register */
 358:Core/Src/main.c ****     SET_BIT(PWR->CR, PWR_CR_CWUF);
 422              		.loc 1 358 5 view .LVU127
 423 005a 2368     		ldr	r3, [r4]
 424 005c 43F00403 		orr	r3, r3, #4
 425 0060 2360     		str	r3, [r4]
 359:Core/Src/main.c **** 
 360:Core/Src/main.c ****     /* Clear SBF bit in Power Control/Status register */
 361:Core/Src/main.c ****     SET_BIT(PWR->CR, PWR_CR_CSBF);
 426              		.loc 1 361 5 view .LVU128
 427 0062 2368     		ldr	r3, [r4]
 428 0064 43F00803 		orr	r3, r3, #8
 429 0068 2360     		str	r3, [r4]
 362:Core/Src/main.c **** 
 363:Core/Src/main.c ****     (void)PWR->CR;
 430              		.loc 1 363 5 view .LVU129
 431 006a 2368     		ldr	r3, [r4]
 364:Core/Src/main.c ****     (void)PWR->CSR;
 432              		.loc 1 364 5 view .LVU130
 433 006c 6368     		ldr	r3, [r4, #4]
 365:Core/Src/main.c **** 
 366:Core/Src/main.c ****     // Disable debug, trace and IWDG in low-power modes
 367:Core/Src/main.c ****     DBGMCU->CR = (uint32_t)0x00;
 434              		.loc 1 367 5 view .LVU131
 435              		.loc 1 367 16 is_stmt 0 view .LVU132
 436 006e 064B     		ldr	r3, .L21+12
 437 0070 5D60     		str	r5, [r3, #4]
 438              	.L19:
 368:Core/Src/main.c **** 
 369:Core/Src/main.c **** #if DEBUG == 1
 370:Core/Src/main.c ****     logPC("Bravo 6\nGoing Dark\n");
 371:Core/Src/main.c **** #endif /* DEBUG == 1 */
 372:Core/Src/main.c **** 
 373:Core/Src/main.c ****     for (;;)
 439              		.loc 1 373 5 is_stmt 1 discriminator 1 view .LVU133
 374:Core/Src/main.c ****     {
 375:Core/Src/main.c ****         __DSB();
 440              		.loc 1 375 9 discriminator 1 view .LVU134
 441              	.LBB10:
 442              	.LBI10:
 443              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 16


  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 17


  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 18


 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 19


 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 20


 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 21


 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 22


 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 23


 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 24


 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 25


 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 26


 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 27


 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 28


 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 29


 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 30


 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 31


 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 444              		.loc 2 877 27 discriminator 1 view .LVU135
 445              	.LBB11:
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 446              		.loc 2 879 3 discriminator 1 view .LVU136
 447              		.syntax unified
 448              	@ 879 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 449 0072 BFF34F8F 		dsb 0xF
 450              	@ 0 "" 2
 451              		.thumb
 452              		.syntax unified
 453              	.LBE11:
 454              	.LBE10:
 376:Core/Src/main.c ****         __WFI();
 455              		.loc 1 376 9 discriminator 1 view .LVU137
 456              		.syntax unified
 457              	@ 376 "Core/Src/main.c" 1
 458 0076 30BF     		wfi
 459              	@ 0 "" 2
 373:Core/Src/main.c ****     {
 460              		.loc 1 373 11 discriminator 1 view .LVU138
 461              		.thumb
 462              		.syntax unified
 463 0078 FBE7     		b	.L19
 464              	.L22:
 465 007a 00BF     		.align	2
 466              	.L21:
 467 007c 00700040 		.word	1073770496
 468 0080 00000000 		.word	hrtc
 469 0084 00ED00E0 		.word	-536810240
 470 0088 002004E0 		.word	-536600576
 471              		.cfi_endproc
 472              	.LFE72:
 474              		.section	.text.Error_Handler,"ax",%progbits
 475              		.align	1
 476              		.global	Error_Handler
 477              		.syntax unified
 478              		.thumb
 479              		.thumb_func
 480              		.fpu softvfp
 482              	Error_Handler:
 483              	.LFB73:
 377:Core/Src/main.c ****     }
 378:Core/Src/main.c **** }
 379:Core/Src/main.c **** 
 380:Core/Src/main.c **** /* USER CODE END 4 */
 381:Core/Src/main.c **** 
 382:Core/Src/main.c **** /**
 383:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 32


 384:Core/Src/main.c ****   * @retval None
 385:Core/Src/main.c ****   */
 386:Core/Src/main.c **** void Error_Handler(void)
 387:Core/Src/main.c **** {
 484              		.loc 1 387 1 view -0
 485              		.cfi_startproc
 486              		@ Volatile: function does not return.
 487              		@ args = 0, pretend = 0, frame = 0
 488              		@ frame_needed = 0, uses_anonymous_args = 0
 489              		@ link register save eliminated.
 388:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 389:Core/Src/main.c ****     /* User can add his own implementation to report the HAL error return state */
 390:Core/Src/main.c ****     __disable_irq();
 490              		.loc 1 390 5 view .LVU140
 491              	.LBB12:
 492              	.LBI12:
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493              		.loc 2 140 27 view .LVU141
 494              	.LBB13:
 142:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495              		.loc 2 142 3 view .LVU142
 496              		.syntax unified
 497              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 498 0000 72B6     		cpsid i
 499              	@ 0 "" 2
 500              		.thumb
 501              		.syntax unified
 502              	.L24:
 503              	.LBE13:
 504              	.LBE12:
 391:Core/Src/main.c ****     while (1)
 505              		.loc 1 391 5 discriminator 1 view .LVU143
 392:Core/Src/main.c ****     {
 393:Core/Src/main.c ****     }
 506              		.loc 1 393 5 discriminator 1 view .LVU144
 391:Core/Src/main.c ****     while (1)
 507              		.loc 1 391 11 discriminator 1 view .LVU145
 508 0002 FEE7     		b	.L24
 509              		.cfi_endproc
 510              	.LFE73:
 512              		.section	.text.SystemClock_Config,"ax",%progbits
 513              		.align	1
 514              		.global	SystemClock_Config
 515              		.syntax unified
 516              		.thumb
 517              		.thumb_func
 518              		.fpu softvfp
 520              	SystemClock_Config:
 521              	.LFB69:
 209:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 522              		.loc 1 209 1 view -0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 80
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526 0000 00B5     		push	{lr}
 527              	.LCFI4:
 528              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 33


 529              		.cfi_offset 14, -4
 530 0002 95B0     		sub	sp, sp, #84
 531              	.LCFI5:
 532              		.cfi_def_cfa_offset 88
 210:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 533              		.loc 1 210 3 view .LVU147
 210:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 534              		.loc 1 210 22 is_stmt 0 view .LVU148
 535 0004 2822     		movs	r2, #40
 536 0006 0021     		movs	r1, #0
 537 0008 0DEB0200 		add	r0, sp, r2
 538 000c FFF7FEFF 		bl	memset
 539              	.LVL28:
 211:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 540              		.loc 1 211 3 is_stmt 1 view .LVU149
 211:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 541              		.loc 1 211 22 is_stmt 0 view .LVU150
 542 0010 0023     		movs	r3, #0
 543 0012 0593     		str	r3, [sp, #20]
 544 0014 0693     		str	r3, [sp, #24]
 545 0016 0793     		str	r3, [sp, #28]
 546 0018 0893     		str	r3, [sp, #32]
 547 001a 0993     		str	r3, [sp, #36]
 212:Core/Src/main.c **** 
 548              		.loc 1 212 3 is_stmt 1 view .LVU151
 212:Core/Src/main.c **** 
 549              		.loc 1 212 28 is_stmt 0 view .LVU152
 550 001c 0193     		str	r3, [sp, #4]
 551 001e 0293     		str	r3, [sp, #8]
 552 0020 0393     		str	r3, [sp, #12]
 553 0022 0493     		str	r3, [sp, #16]
 217:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 554              		.loc 1 217 3 is_stmt 1 view .LVU153
 217:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 555              		.loc 1 217 36 is_stmt 0 view .LVU154
 556 0024 0623     		movs	r3, #6
 557 0026 0A93     		str	r3, [sp, #40]
 218:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 558              		.loc 1 218 3 is_stmt 1 view .LVU155
 218:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 559              		.loc 1 218 30 is_stmt 0 view .LVU156
 560 0028 0123     		movs	r3, #1
 561 002a 0D93     		str	r3, [sp, #52]
 219:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 562              		.loc 1 219 3 is_stmt 1 view .LVU157
 219:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 563              		.loc 1 219 30 is_stmt 0 view .LVU158
 564 002c 0E93     		str	r3, [sp, #56]
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 565              		.loc 1 220 3 is_stmt 1 view .LVU159
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 566              		.loc 1 220 41 is_stmt 0 view .LVU160
 567 002e 1023     		movs	r3, #16
 568 0030 0F93     		str	r3, [sp, #60]
 221:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 569              		.loc 1 221 3 is_stmt 1 view .LVU161
 222:Core/Src/main.c ****   {
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 34


 570              		.loc 1 222 3 view .LVU162
 222:Core/Src/main.c ****   {
 571              		.loc 1 222 7 is_stmt 0 view .LVU163
 572 0032 0AA8     		add	r0, sp, #40
 573 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 574              	.LVL29:
 222:Core/Src/main.c ****   {
 575              		.loc 1 222 6 view .LVU164
 576 0038 C0B9     		cbnz	r0, .L30
 229:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 577              		.loc 1 229 3 is_stmt 1 view .LVU165
 229:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 578              		.loc 1 229 31 is_stmt 0 view .LVU166
 579 003a 0F23     		movs	r3, #15
 580 003c 0593     		str	r3, [sp, #20]
 231:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 581              		.loc 1 231 3 is_stmt 1 view .LVU167
 231:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 582              		.loc 1 231 34 is_stmt 0 view .LVU168
 583 003e 0021     		movs	r1, #0
 584 0040 0691     		str	r1, [sp, #24]
 232:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 585              		.loc 1 232 3 is_stmt 1 view .LVU169
 232:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 586              		.loc 1 232 35 is_stmt 0 view .LVU170
 587 0042 0791     		str	r1, [sp, #28]
 233:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 588              		.loc 1 233 3 is_stmt 1 view .LVU171
 233:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 589              		.loc 1 233 36 is_stmt 0 view .LVU172
 590 0044 0891     		str	r1, [sp, #32]
 234:Core/Src/main.c **** 
 591              		.loc 1 234 3 is_stmt 1 view .LVU173
 234:Core/Src/main.c **** 
 592              		.loc 1 234 36 is_stmt 0 view .LVU174
 593 0046 0991     		str	r1, [sp, #36]
 236:Core/Src/main.c ****   {
 594              		.loc 1 236 3 is_stmt 1 view .LVU175
 236:Core/Src/main.c ****   {
 595              		.loc 1 236 7 is_stmt 0 view .LVU176
 596 0048 05A8     		add	r0, sp, #20
 597 004a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 598              	.LVL30:
 236:Core/Src/main.c ****   {
 599              		.loc 1 236 6 view .LVU177
 600 004e 78B9     		cbnz	r0, .L31
 240:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 601              		.loc 1 240 3 is_stmt 1 view .LVU178
 240:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 602              		.loc 1 240 38 is_stmt 0 view .LVU179
 603 0050 0323     		movs	r3, #3
 604 0052 0193     		str	r3, [sp, #4]
 241:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 605              		.loc 1 241 3 is_stmt 1 view .LVU180
 241:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 606              		.loc 1 241 35 is_stmt 0 view .LVU181
 607 0054 4FF48073 		mov	r3, #256
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 35


 608 0058 0293     		str	r3, [sp, #8]
 242:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 609              		.loc 1 242 3 is_stmt 1 view .LVU182
 242:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 610              		.loc 1 242 35 is_stmt 0 view .LVU183
 611 005a 0023     		movs	r3, #0
 612 005c 0393     		str	r3, [sp, #12]
 243:Core/Src/main.c ****   {
 613              		.loc 1 243 3 is_stmt 1 view .LVU184
 243:Core/Src/main.c ****   {
 614              		.loc 1 243 7 is_stmt 0 view .LVU185
 615 005e 01A8     		add	r0, sp, #4
 616 0060 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 617              	.LVL31:
 243:Core/Src/main.c ****   {
 618              		.loc 1 243 6 view .LVU186
 619 0064 30B9     		cbnz	r0, .L32
 247:Core/Src/main.c **** 
 620              		.loc 1 247 1 view .LVU187
 621 0066 15B0     		add	sp, sp, #84
 622              	.LCFI6:
 623              		.cfi_remember_state
 624              		.cfi_def_cfa_offset 4
 625              		@ sp needed
 626 0068 5DF804FB 		ldr	pc, [sp], #4
 627              	.L30:
 628              	.LCFI7:
 629              		.cfi_restore_state
 224:Core/Src/main.c ****   }
 630              		.loc 1 224 5 is_stmt 1 view .LVU188
 631 006c FFF7FEFF 		bl	Error_Handler
 632              	.LVL32:
 633              	.L31:
 238:Core/Src/main.c ****   }
 634              		.loc 1 238 5 view .LVU189
 635 0070 FFF7FEFF 		bl	Error_Handler
 636              	.LVL33:
 637              	.L32:
 245:Core/Src/main.c ****   }
 638              		.loc 1 245 5 view .LVU190
 639 0074 FFF7FEFF 		bl	Error_Handler
 640              	.LVL34:
 641              		.cfi_endproc
 642              	.LFE69:
 644              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 645              		.align	2
 646              	.LC0:
 647 0000 48656C6C 		.ascii	"Hello from Node! This is a random number %d!\000"
 647      6F206672 
 647      6F6D204E 
 647      6F646521 
 647      20546869 
 648              		.section	.text.main,"ax",%progbits
 649              		.align	1
 650              		.global	main
 651              		.syntax unified
 652              		.thumb
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 36


 653              		.thumb_func
 654              		.fpu softvfp
 656              	main:
 657              	.LFB68:
 105:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 658              		.loc 1 105 1 view -0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 0
 661              		@ frame_needed = 0, uses_anonymous_args = 0
 662 0000 70B5     		push	{r4, r5, r6, lr}
 663              	.LCFI8:
 664              		.cfi_def_cfa_offset 16
 665              		.cfi_offset 4, -16
 666              		.cfi_offset 5, -12
 667              		.cfi_offset 6, -8
 668              		.cfi_offset 14, -4
 113:Core/Src/main.c **** 
 669              		.loc 1 113 3 view .LVU192
 670 0002 FFF7FEFF 		bl	HAL_Init
 671              	.LVL35:
 119:Core/Src/main.c **** 
 672              		.loc 1 119 3 view .LVU193
 673 0006 FFF7FEFF 		bl	SystemClock_Config
 674              	.LVL36:
 131:Core/Src/main.c ****   MX_ADC1_Init();
 675              		.loc 1 131 3 view .LVU194
 676 000a FFF7FEFF 		bl	MX_GPIO_Init
 677              	.LVL37:
 132:Core/Src/main.c ****   MX_I2C1_Init();
 678              		.loc 1 132 3 view .LVU195
 679 000e FFF7FEFF 		bl	MX_ADC1_Init
 680              	.LVL38:
 133:Core/Src/main.c ****   MX_SPI1_Init();
 681              		.loc 1 133 3 view .LVU196
 682 0012 FFF7FEFF 		bl	MX_I2C1_Init
 683              	.LVL39:
 134:Core/Src/main.c ****   MX_USART1_UART_Init();
 684              		.loc 1 134 3 view .LVU197
 685 0016 FFF7FEFF 		bl	MX_SPI1_Init
 686              	.LVL40:
 135:Core/Src/main.c ****   MX_RTC_Init();
 687              		.loc 1 135 3 view .LVU198
 688 001a FFF7FEFF 		bl	MX_USART1_UART_Init
 689              	.LVL41:
 136:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 690              		.loc 1 136 3 view .LVU199
 691 001e FFF7FEFF 		bl	MX_RTC_Init
 692              	.LVL42:
 143:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc1, 200);
 693              		.loc 1 143 5 view .LVU200
 694 0022 3D4C     		ldr	r4, .L37
 695 0024 2046     		mov	r0, r4
 696 0026 FFF7FEFF 		bl	HAL_ADC_Start
 697              	.LVL43:
 144:Core/Src/main.c **** 
 698              		.loc 1 144 5 view .LVU201
 699 002a C821     		movs	r1, #200
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 37


 700 002c 2046     		mov	r0, r4
 701 002e FFF7FEFF 		bl	HAL_ADC_PollForConversion
 702              	.LVL44:
 146:Core/Src/main.c **** 
 703              		.loc 1 146 5 view .LVU202
 146:Core/Src/main.c **** 
 704              		.loc 1 146 30 is_stmt 0 view .LVU203
 705 0032 0121     		movs	r1, #1
 706 0034 3948     		ldr	r0, .L37+4
 707 0036 FFF7FEFF 		bl	HAL_RTCEx_BKUPRead
 708              	.LVL45:
 709 003a 0446     		mov	r4, r0
 710              	.LVL46:
 148:Core/Src/main.c **** 
 711              		.loc 1 148 5 is_stmt 1 view .LVU204
 712 003c FFF7FEFF 		bl	sx1278_init
 713              	.LVL47:
 150:Core/Src/main.c **** 
 714              		.loc 1 150 5 view .LVU205
 152:Core/Src/main.c ****     {
 715              		.loc 1 152 5 view .LVU206
 716              	.LBB14:
 152:Core/Src/main.c ****     {
 717              		.loc 1 152 10 view .LVU207
 152:Core/Src/main.c ****     {
 718              		.loc 1 152 14 is_stmt 0 view .LVU208
 719 0040 0025     		movs	r5, #0
 720              	.LVL48:
 721              	.L34:
 152:Core/Src/main.c ****     {
 722              		.loc 1 152 21 is_stmt 1 discriminator 1 view .LVU209
 152:Core/Src/main.c ****     {
 723              		.loc 1 152 5 is_stmt 0 discriminator 1 view .LVU210
 724 0042 002D     		cmp	r5, #0
 725 0044 4FDD     		ble	.L35
 726              	.LBE14:
 159:Core/Src/main.c ****     HAL_ADC_Stop(&hadc1);
 727              		.loc 1 159 5 is_stmt 1 view .LVU211
 728 0046 621C     		adds	r2, r4, #1
 729 0048 0121     		movs	r1, #1
 730 004a 3448     		ldr	r0, .L37+4
 731 004c FFF7FEFF 		bl	HAL_RTCEx_BKUPWrite
 732              	.LVL49:
 160:Core/Src/main.c ****     HAL_ADC_DeInit(&hadc1);
 733              		.loc 1 160 5 view .LVU212
 734 0050 314C     		ldr	r4, .L37
 735              	.LVL50:
 160:Core/Src/main.c ****     HAL_ADC_DeInit(&hadc1);
 736              		.loc 1 160 5 is_stmt 0 view .LVU213
 737 0052 2046     		mov	r0, r4
 738 0054 FFF7FEFF 		bl	HAL_ADC_Stop
 739              	.LVL51:
 161:Core/Src/main.c **** 
 740              		.loc 1 161 5 is_stmt 1 view .LVU214
 741 0058 2046     		mov	r0, r4
 742 005a FFF7FEFF 		bl	HAL_ADC_DeInit
 743              	.LVL52:
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 38


 163:Core/Src/main.c **** 
 744              		.loc 1 163 5 view .LVU215
 745 005e FFF7FEFF 		bl	sx1278_sleep
 746              	.LVL53:
 165:Core/Src/main.c **** 
 747              		.loc 1 165 5 view .LVU216
 748 0062 2F4D     		ldr	r5, .L37+8
 749              	.LVL54:
 165:Core/Src/main.c **** 
 750              		.loc 1 165 5 is_stmt 0 view .LVU217
 751 0064 4FF40041 		mov	r1, #32768
 752 0068 2846     		mov	r0, r5
 753 006a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 754              	.LVL55:
 167:Core/Src/main.c ****     HAL_Delay(3000);
 755              		.loc 1 167 5 is_stmt 1 view .LVU218
 756 006e 2D4C     		ldr	r4, .L37+12
 757 0070 0122     		movs	r2, #1
 758 0072 4FF48041 		mov	r1, #16384
 759 0076 2046     		mov	r0, r4
 760 0078 FFF7FEFF 		bl	HAL_GPIO_WritePin
 761              	.LVL56:
 168:Core/Src/main.c ****     readSensor();
 762              		.loc 1 168 5 view .LVU219
 763 007c 40F6B830 		movw	r0, #3000
 764 0080 FFF7FEFF 		bl	HAL_Delay
 765              	.LVL57:
 169:Core/Src/main.c ****     HAL_GPIO_WritePin(PWR_CTRL_GPIO_Port, PWR_CTRL_Pin, GPIO_PIN_RESET);
 766              		.loc 1 169 5 view .LVU220
 767 0084 FFF7FEFF 		bl	readSensor
 768              	.LVL58:
 170:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED0_GPIO_Port, LED0_Pin);
 769              		.loc 1 170 5 view .LVU221
 770 0088 0022     		movs	r2, #0
 771 008a 4FF48041 		mov	r1, #16384
 772 008e 2046     		mov	r0, r4
 773 0090 FFF7FEFF 		bl	HAL_GPIO_WritePin
 774              	.LVL59:
 171:Core/Src/main.c ****     HAL_Delay(1000);
 775              		.loc 1 171 5 view .LVU222
 776 0094 04F58064 		add	r4, r4, #1024
 777 0098 4FF40051 		mov	r1, #8192
 778 009c 2046     		mov	r0, r4
 779 009e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 780              	.LVL60:
 172:Core/Src/main.c **** 
 781              		.loc 1 172 5 view .LVU223
 782 00a2 4FF47A70 		mov	r0, #1000
 783 00a6 FFF7FEFF 		bl	HAL_Delay
 784              	.LVL61:
 181:Core/Src/main.c ****     HAL_Delay(500);
 785              		.loc 1 181 5 view .LVU224
 786 00aa 4FF40041 		mov	r1, #32768
 787 00ae 2846     		mov	r0, r5
 788 00b0 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 789              	.LVL62:
 182:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED0_GPIO_Port, LED0_Pin);
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 39


 790              		.loc 1 182 5 view .LVU225
 791 00b4 4FF4FA70 		mov	r0, #500
 792 00b8 FFF7FEFF 		bl	HAL_Delay
 793              	.LVL63:
 183:Core/Src/main.c ****     HAL_Delay(500);
 794              		.loc 1 183 5 view .LVU226
 795 00bc 4FF40051 		mov	r1, #8192
 796 00c0 2046     		mov	r0, r4
 797 00c2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 798              	.LVL64:
 184:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED1_GPIO_Port, LED1_Pin);
 799              		.loc 1 184 5 view .LVU227
 800 00c6 4FF4FA70 		mov	r0, #500
 801 00ca FFF7FEFF 		bl	HAL_Delay
 802              	.LVL65:
 185:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED0_GPIO_Port, LED0_Pin);
 803              		.loc 1 185 5 view .LVU228
 804 00ce 4FF40041 		mov	r1, #32768
 805 00d2 2846     		mov	r0, r5
 806 00d4 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 807              	.LVL66:
 186:Core/Src/main.c **** 
 808              		.loc 1 186 5 view .LVU229
 809 00d8 4FF40051 		mov	r1, #8192
 810 00dc 2046     		mov	r0, r4
 811 00de FFF7FEFF 		bl	HAL_GPIO_TogglePin
 812              	.LVL67:
 188:Core/Src/main.c **** 
 813              		.loc 1 188 5 view .LVU230
 814 00e2 FFF7FEFF 		bl	goingDark
 815              	.LVL68:
 816              	.L35:
 817              	.LBB15:
 154:Core/Src/main.c ****         sx1278_send_data(msg, strlen((const char *)msg));
 818              		.loc 1 154 9 discriminator 3 view .LVU231
 154:Core/Src/main.c ****         sx1278_send_data(msg, strlen((const char *)msg));
 819              		.loc 1 154 84 is_stmt 0 discriminator 3 view .LVU232
 820 00e6 0C48     		ldr	r0, .L37
 821 00e8 FFF7FEFF 		bl	HAL_ADC_GetValue
 822              	.LVL69:
 154:Core/Src/main.c ****         sx1278_send_data(msg, strlen((const char *)msg));
 823              		.loc 1 154 109 discriminator 3 view .LVU233
 824 00ec B0FBF4F2 		udiv	r2, r0, r4
 154:Core/Src/main.c ****         sx1278_send_data(msg, strlen((const char *)msg));
 825              		.loc 1 154 9 discriminator 3 view .LVU234
 826 00f0 0D4E     		ldr	r6, .L37+16
 827 00f2 04FB1202 		mls	r2, r4, r2, r0
 828 00f6 0D49     		ldr	r1, .L37+20
 829 00f8 3046     		mov	r0, r6
 830 00fa FFF7FEFF 		bl	sprintf
 831              	.LVL70:
 155:Core/Src/main.c ****         HAL_Delay(2000);
 832              		.loc 1 155 9 is_stmt 1 discriminator 3 view .LVU235
 155:Core/Src/main.c ****         HAL_Delay(2000);
 833              		.loc 1 155 31 is_stmt 0 discriminator 3 view .LVU236
 834 00fe 3046     		mov	r0, r6
 835 0100 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 40


 836              	.LVL71:
 837 0104 0146     		mov	r1, r0
 155:Core/Src/main.c ****         HAL_Delay(2000);
 838              		.loc 1 155 9 discriminator 3 view .LVU237
 839 0106 3046     		mov	r0, r6
 840 0108 FFF7FEFF 		bl	sx1278_send_data
 841              	.LVL72:
 156:Core/Src/main.c ****     }
 842              		.loc 1 156 9 is_stmt 1 discriminator 3 view .LVU238
 843 010c 4FF4FA60 		mov	r0, #2000
 844 0110 FFF7FEFF 		bl	HAL_Delay
 845              	.LVL73:
 152:Core/Src/main.c ****     {
 846              		.loc 1 152 28 discriminator 3 view .LVU239
 152:Core/Src/main.c ****     {
 847              		.loc 1 152 29 is_stmt 0 discriminator 3 view .LVU240
 848 0114 0135     		adds	r5, r5, #1
 849              	.LVL74:
 152:Core/Src/main.c ****     {
 850              		.loc 1 152 29 discriminator 3 view .LVU241
 851 0116 94E7     		b	.L34
 852              	.L38:
 853              		.align	2
 854              	.L37:
 855 0118 00000000 		.word	hadc1
 856 011c 00000000 		.word	hrtc
 857 0120 00080140 		.word	1073809408
 858 0124 000C0140 		.word	1073810432
 859 0128 00000000 		.word	.LANCHOR3
 860 012c 00000000 		.word	.LC0
 861              	.LBE15:
 862              		.cfi_endproc
 863              	.LFE68:
 865              		.section	.bss.msg.2,"aw",%nobits
 866              		.align	2
 867              		.set	.LANCHOR3,. + 0
 870              	msg.2:
 871 0000 00000000 		.space	50
 871      00000000 
 871      00000000 
 871      00000000 
 871      00000000 
 872              		.section	.bss.mySoil,"aw",%nobits
 873              		.align	2
 874              		.set	.LANCHOR2,. + 0
 877              	mySoil:
 878 0000 00000000 		.space	32
 878      00000000 
 878      00000000 
 878      00000000 
 878      00000000 
 879              		.section	.bss.rxbuffer.0,"aw",%nobits
 880              		.align	2
 881              		.set	.LANCHOR1,. + 0
 884              	rxbuffer.0:
 885 0000 00000000 		.space	25
 885      00000000 
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 41


 885      00000000 
 885      00000000 
 885      00000000 
 886              		.section	.data.txbuffer.1,"aw"
 887              		.align	2
 888              		.set	.LANCHOR0,. + 0
 891              	txbuffer.1:
 892 0000 01030000 		.ascii	"\001\003\000\000\000\010D\014\000"
 892      0008440C 
 892      00
 893 0009 00       		.space	1
 894              		.text
 895              	.Letext0:
 896              		.file 3 "d:\\tools\\gcc-arm-none-eabi-10.3-2021.07\\arm-none-eabi\\include\\machine\\_default_type
 897              		.file 4 "d:\\tools\\gcc-arm-none-eabi-10.3-2021.07\\arm-none-eabi\\include\\sys\\_stdint.h"
 898              		.file 5 "Drivers/CMSIS/Include/core_cm3.h"
 899              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 900              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 901              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 902              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 903              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 904              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 905              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 906              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 907              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rtc.h"
 908              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 909              		.file 16 "Core/Inc/adc.h"
 910              		.file 17 "Core/Inc/rtc.h"
 911              		.file 18 "Core/Inc/usart.h"
 912              		.file 19 "d:\\tools\\gcc-arm-none-eabi-10.3-2021.07\\arm-none-eabi\\include\\stdio.h"
 913              		.file 20 "d:\\tools\\gcc-arm-none-eabi-10.3-2021.07\\arm-none-eabi\\include\\string.h"
 914              		.file 21 "Core/Inc/sx1278.h"
 915              		.file 22 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 916              		.file 23 "Core/Inc/gpio.h"
 917              		.file 24 "Core/Inc/i2c.h"
 918              		.file 25 "Core/Inc/spi.h"
 919              		.file 26 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rtc_ex.h"
 920              		.file 27 "<built-in>"
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 42


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s:16     .text.CRC16:00000000 $t
C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s:24     .text.CRC16:00000000 CRC16
C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s:120    .text.readSensor:00000000 $t
C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s:127    .text.readSensor:00000000 readSensor
C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s:340    .text.readSensor:00000108 $d
C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s:352    .text.goingDark:00000000 $t
C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s:359    .text.goingDark:00000000 goingDark
C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s:467    .text.goingDark:0000007c $d
C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s:475    .text.Error_Handler:00000000 $t
C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s:482    .text.Error_Handler:00000000 Error_Handler
C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s:513    .text.SystemClock_Config:00000000 $t
C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s:520    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s:645    .rodata.main.str1.4:00000000 $d
C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s:649    .text.main:00000000 $t
C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s:656    .text.main:00000000 main
C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s:855    .text.main:00000118 $d
C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s:866    .bss.msg.2:00000000 $d
C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s:870    .bss.msg.2:00000000 msg.2
C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s:873    .bss.mySoil:00000000 $d
C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s:877    .bss.mySoil:00000000 mySoil
C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s:880    .bss.rxbuffer.0:00000000 $d
C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s:884    .bss.rxbuffer.0:00000000 rxbuffer.0
C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s:887    .data.txbuffer.1:00000000 $d
C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s:891    .data.txbuffer.1:00000000 txbuffer.1

UNDEFINED SYMBOLS
__aeabi_ui2f
__aeabi_fdiv
HAL_GPIO_WritePin
HAL_UART_Transmit
HAL_UART_Receive
memset
huart1
HAL_RTC_GetTime
HAL_RTC_SetAlarm_IT
hrtc
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_GPIO_Init
MX_ADC1_Init
MX_I2C1_Init
MX_SPI1_Init
MX_USART1_UART_Init
MX_RTC_Init
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_RTCEx_BKUPRead
sx1278_init
HAL_RTCEx_BKUPWrite
HAL_ADC_Stop
HAL_ADC_DeInit
sx1278_sleep
HAL_GPIO_TogglePin
ARM GAS  C:\Users\Vento\AppData\Local\Temp\ccBTXimc.s 			page 43


HAL_Delay
HAL_ADC_GetValue
sprintf
strlen
sx1278_send_data
hadc1
